-- UniScript BETA — Rayfield-style draggable UI (offline) with keybind & noclip fix yes

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera

-- Settings
local Settings = {
    ESPEnabled = false,
    AimlockEnabled = false,
    AimlockFOV = 150,
    AimlockPrediction = 0.18,
    WallbangEnabled = false,
    MeleeAuraEnabled = false,
    MeleeReach = 10,
    NoClipEnabled = false,
    InfiniteSprint = false,
    PlayerFOV = Camera.FieldOfView or 70
}

-- Safe helper
local function safeCall(fn, name)
    local ok, err = pcall(fn)
    if not ok then warn(("UI error [%s]: %s"):format(name or "unknown", tostring(err))) end
end

-- create helper
local function make(parent, class, props)
    local obj = Instance.new(class)
    if props then for k,v in pairs(props) do obj[k] = v end
    obj.Parent = parent
    return obj
end

-- ScreenGui
local screenGui = make(LocalPlayer:WaitForChild("PlayerGui"), "ScreenGui", {Name = "UniScriptGUI", ResetOnSpawn = false})

-- Main window
local window = make(screenGui, "Frame", {
    Name = "Window",
    Size = UDim2.new(0, 580, 0, 380),
    Position = UDim2.new(0.06, 0, 0.12, 0),
    BackgroundColor3 = Color3.fromRGB(18, 18, 20),
    BorderSizePixel = 0
})
make(window, "UICorner", {CornerRadius = UDim.new(0, 8)})

-- Title bar
local titleBar = make(window, "Frame", {Size=UDim2.new(1,0,0,44), BackgroundColor3=Color3.fromRGB(12,12,14), BorderSizePixel=0})
make(titleBar, "UIStroke", {Color=Color3.fromRGB(30,30,30), Thickness=1, Transparency=0.4})
make(titleBar, "UIGradient", {Color=ColorSequence.new(Color3.fromRGB(16,16,18), Color3.fromRGB(12,12,14)), Rotation=90})

-- Title Label updated
local titleLabel = make(titleBar, "TextLabel", {
    Size = UDim2.new(1, -20, 1, 0),
    Position = UDim2.new(0, 10, 0, 0),
    BackgroundTransparency = 1,
    Text = "UniScript BETA",
    TextColor3 = Color3.fromRGB(230,230,230),
    Font = Enum.Font.SourceSansBold,
    TextSize = 18,
    TextXAlignment = Enum.TextXAlignment.Left
})

-- Sidebar
local sidebar = make(window, "Frame", {Size=UDim2.new(0,170,1,-44), Position=UDim2.new(0,0,0,44), BackgroundColor3=Color3.fromRGB(24,24,28), BorderSizePixel=0})
make(sidebar, "UICorner", {CornerRadius=UDim.new(0,6)})
local sidebarLayout = make(sidebar, "UIListLayout", {Padding=UDim.new(0,8)})
sidebarLayout.SortOrder = Enum.SortOrder.LayoutOrder

-- Content area
local content = make(window, "Frame", {Size=UDim2.new(1,-180,1,-64), Position=UDim2.new(0,180,0,54), BackgroundTransparency=1})

-- Pages
local pages = {}
local function makePage(name)
    local p = make(content, "Frame", {Size=UDim2.new(1,0,1,0), BackgroundTransparency=1, Visible=false})
    pages[name] = p
    return p
end
local combatPage = makePage("Combat")
local miscPage = makePage("Misc")
local extrasPage = makePage("Extras")
combatPage.Visible = true

-- Draggable window
do
    local dragging, dragInput, dragStart, startPos
    titleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = window.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then dragging = false end
            end)
        end
    end)
    titleBar.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then dragInput = input end
    end)
    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - dragStart
            window.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
end

-- Keybind to toggle UI (K)
local uiVisible = true
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == Enum.KeyCode.K then
        uiVisible = not uiVisible
        safeCall(function() window.Visible = uiVisible end, "UI Toggle")
    end
end)

-- Noclip fix
local function noclipLoop()
    local char = LocalPlayer.Character
    if not char then return end
    for _, part in pairs(char:GetDescendants()) do
        if part:IsA("BasePart") then
            part.CanCollide = not Settings.NoClipEnabled
        end
    end
end
RunService.Stepped:Connect(function()
    if Settings.NoClipEnabled then noclipLoop() end
end)

-- Expose Settings globally
_G.UniScriptSettings = Settings

print("✅ UniScript BETA UI loaded with keybind (K) & fixed Noclip")
