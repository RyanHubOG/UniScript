-- UniScript BETA â€” Rayfield-style draggable UI (fixed title + layout)
-- Clean UI with draggable window, auto-aligned controls

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

-- Settings table
local Settings = {
    ESPEnabled = false,
    AimlockEnabled = false,
    AimlockFOV = 150,
    AimlockPrediction = 0.18,
    WallbangEnabled = false,
    MeleeAuraEnabled = false,
    MeleeReach = 10,
    NoClipEnabled = false,
    InfiniteSprint = false,
    PlayerFOV = Camera.FieldOfView or 70
}

-- helper
local function make(parent, class, props)
    local obj = Instance.new(class)
    if props then for k,v in pairs(props) do obj[k] = v end end
    obj.Parent = parent
    return obj
end

local screenGui = make(LocalPlayer:WaitForChild("PlayerGui"), "ScreenGui", {
    Name = "UniScriptGUI",
    ResetOnSpawn = false
})

-- Main window
local window = make(screenGui, "Frame", {
    Size = UDim2.new(0, 580, 0, 380),
    Position = UDim2.new(0.06, 0, 0.12, 0),
    BackgroundColor3 = Color3.fromRGB(18, 18, 20),
    BorderSizePixel = 0
})
make(window, "UICorner", {CornerRadius = UDim.new(0, 8)})

-- title bar
local titleBar = make(window, "Frame", {
    Size = UDim2.new(1,0,0,44),
    BackgroundColor3 = Color3.fromRGB(12,12,14),
    BorderSizePixel = 0
})
local titleLabel = make(titleBar, "TextLabel", {
    Size = UDim2.new(1, -120, 1, 0),
    Position = UDim2.new(0, 20, 0, 0),
    BackgroundTransparency = 1,
    Text = "UniScript BETA",
    TextColor3 = Color3.fromRGB(230,230,230),
    Font = Enum.Font.SourceSansBold,
    TextSize = 18,
    TextXAlignment = Enum.TextXAlignment.Left
})
local subtitle = make(titleBar, "TextLabel", {
    Size = UDim2.new(0, 260, 1, 0),
    Position = UDim2.new(1, -260, 0, 0),
    BackgroundTransparency = 1,
    Text = "By Ryan",
    TextColor3 = Color3.fromRGB(160,160,160),
    Font = Enum.Font.SourceSans,
    TextSize = 13,
    TextXAlignment = Enum.TextXAlignment.Right
})

-- Sidebar
local sidebar = make(window, "Frame", {
    Size = UDim2.new(0, 170, 1, -44),
    Position = UDim2.new(0,0,0,44),
    BackgroundColor3 = Color3.fromRGB(24,24,28),
    BorderSizePixel = 0
})
make(sidebar, "UICorner", {CornerRadius = UDim.new(0, 6)})
local sidebarLayout = make(sidebar, "UIListLayout", {Padding = UDim.new(0, 8), SortOrder = Enum.SortOrder.LayoutOrder})

-- Content
local content = make(window, "Frame", {
    Size = UDim2.new(1, -180, 1, -54),
    Position = UDim2.new(0, 180, 0, 50),
    BackgroundTransparency = 1
})

-- Create pages with UIListLayout
local pages = {}
local function makePage()
    local p = make(content, "ScrollingFrame", {
        Size = UDim2.new(1,0,1,0),
        CanvasSize = UDim2.new(0,0,0,0),
        BackgroundTransparency = 1,
        Visible = false,
        ScrollBarThickness = 6
    })
    local layout = make(p, "UIListLayout", {Padding = UDim.new(0, 8)})
    layout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        p.CanvasSize = UDim2.new(0,0,0,layout.AbsoluteContentSize.Y+10)
    end)
    pages[#pages+1] = p
    return p
end

local combatPage = makePage()
combatPage.Visible = true
local miscPage = makePage()
local extrasPage = makePage()

-- tab button
local function makeTabButton(text, page)
    local btn = make(sidebar, "TextButton", {
        Size = UDim2.new(1, -16, 0, 44),
        BackgroundColor3 = Color3.fromRGB(28,28,32),
        BorderSizePixel = 0,
        Text = text,
        TextColor3 = Color3.fromRGB(220,220,220),
        Font = Enum.Font.SourceSansBold,
        TextSize = 15
    })
    make(btn, "UICorner", {CornerRadius = UDim.new(0,6)})
    btn.MouseButton1Click:Connect(function()
        for _,p in pairs(pages) do p.Visible = false end
        for _,b in pairs(sidebar:GetChildren()) do if b:IsA("TextButton") then b.BackgroundColor3 = Color3.fromRGB(28,28,32) end end
        btn.BackgroundColor3 = Color3.fromRGB(40,40,46)
        page.Visible = true
    end)
    return btn
end

makeTabButton("Combat", combatPage).BackgroundColor3 = Color3.fromRGB(40,40,46)
makeTabButton("Misc", miscPage)
makeTabButton("Extras", extrasPage)

-- control builders
local function addToggle(parent, text, callback)
    local btn = make(parent, "TextButton", {
        Size = UDim2.new(1, -10, 0, 32),
        BackgroundColor3 = Color3.fromRGB(32,32,36),
        Text = text.." [OFF]",
        TextColor3 = Color3.fromRGB(220,220,220),
        Font = Enum.Font.SourceSans,
        TextSize = 15
    })
    make(btn, "UICorner", {CornerRadius = UDim.new(0,6)})
    local state = false
    btn.MouseButton1Click:Connect(function()
        state = not state
        btn.Text = text .. (state and " [ON]" or " [OFF]")
        callback(state)
    end)
end

local function addSlider(parent, text, min, max, default, callback)
    local frame = make(parent, "Frame", {Size = UDim2.new(1, -10, 0, 50), BackgroundTransparency = 1})
    local label = make(frame, "TextLabel", {Size = UDim2.new(1,0,0,20), BackgroundTransparency = 1, Text = text..": "..default, TextColor3 = Color3.fromRGB(220,220,220), Font = Enum.Font.SourceSans, TextSize = 14})
    local bar = make(frame, "Frame", {Size = UDim2.new(1,0,0,8), Position = UDim2.new(0,0,0,28), BackgroundColor3 = Color3.fromRGB(50,50,55)})
    make(bar, "UICorner", {CornerRadius = UDim.new(0,4)})
    local fill = make(bar, "Frame", {Size = UDim2.new((default-min)/(max-min),0,1,0), BackgroundColor3 = Color3.fromRGB(100,150,255)})
    make(fill, "UICorner", {CornerRadius = UDim.new(0,4)})
    local dragging = false
    local function update(x)
        local rel = math.clamp((x - bar.AbsolutePosition.X)/bar.AbsoluteSize.X, 0, 1)
        local val = math.floor(min + rel*(max-min))
        fill.Size = UDim2.new(rel,0,1,0)
        label.Text = text..": "..val
        callback(val)
    end
    bar.InputBegan:Connect(function(i)
        if i.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            update(i.Position.X)
        end
    end)
    UserInputService.InputChanged:Connect(function(i)
        if dragging and i.UserInputType == Enum.UserInputType.MouseMovement then
            update(i.Position.X)
        end
    end)
    UserInputService.InputEnded:Connect(function(i)
        if dragging and i.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
end

-- Populate combat
addToggle(combatPage, "Aimlock", function(v) Settings.AimlockEnabled = v end)
addSlider(combatPage, "Aimlock FOV", 50, 500, Settings.AimlockFOV, function(v) Settings.AimlockFOV = v end)
addSlider(combatPage, "Prediction", 0, 100, Settings.AimlockPrediction*100, function(v) Settings.AimlockPrediction = v/100 end)
addToggle(combatPage, "Wallbang", function(v) Settings.WallbangEnabled = v end)
addToggle(combatPage, "Melee Aura", function(v) Settings.MeleeAuraEnabled = v end)
addSlider(combatPage, "Melee Reach", 1, 30, Settings.MeleeReach, function(v) Settings.MeleeReach = v end)

-- misc
addToggle(miscPage, "NoClip", function(v) Settings.NoClipEnabled = v end)
addToggle(miscPage, "Infinite Sprint", function(v) Settings.InfiniteSprint = v end)
addSlider(miscPage, "Player FOV", 70, 120, Settings.PlayerFOV, function(v) Settings.PlayerFOV = v Camera.FieldOfView = v end)
addToggle(miscPage, "ESP", function(v) Settings.ESPEnabled = v end)

-- extras
local copyBtn = make(extrasPage, "TextButton", {Size = UDim2.new(0,240,0,34), BackgroundColor3 = Color3.fromRGB(60,60,70), Text = "Copy Discord", TextColor3 = Color3.fromRGB(230,230,230)})
make(copyBtn, "UICorner", {CornerRadius = UDim.new(0,6)})
copyBtn.MouseButton1Click:Connect(function()
    pcall(function() setclipboard("https://discord.gg/dJEM47ZtGa") end)
end)
local unloadBtn = make(extrasPage, "TextButton", {Size = UDim2.new(0,240,0,34), BackgroundColor3 = Color3.fromRGB(165,65,65), Text = "Unload Script", TextColor3 = Color3.fromRGB(240,240,240)})
make(unloadBtn, "UICorner", {CornerRadius = UDim.new(0,6)})
unloadBtn.MouseButton1Click:Connect(function()
    screenGui:Destroy()
end)

-- draggable
do
    local dragging, dragStart, startPos
    titleBar.InputBegan:Connect(function(i)
        if i.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = i.Position
            startPos = window.Position
            i.Changed:Connect(function()
                if i.UserInputState == Enum.UserInputState.End then dragging = false end
            end)
        end
    end)
    UserInputService.InputChanged:Connect(function(i)
        if dragging and i.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = i.Position - dragStart
            window.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset+delta.X, startPos.Y.Scale, startPos.Y.Offset+delta.Y)
        end
    end)
end

-- FPS counter
local fpsGui = make(LocalPlayer:WaitForChild("PlayerGui"), "ScreenGui", {Name="US_FPS", ResetOnSpawn=false})
local fpsLbl = make(fpsGui, "TextLabel", {Size=UDim2.new(0,100,0,24), Position=UDim2.new(0,8,0,8), BackgroundTransparency=0.5, BackgroundColor3=Color3.fromRGB(0,0,0), TextColor3=Color3.fromRGB(0,255,0), Text="FPS: --", Font=Enum.Font.SourceSansBold, TextScaled=true})
local lastTick = tick()
RunService.RenderStepped:Connect(function()
    local now = tick()
    local fps = 1 / math.max(0.00001, now-lastTick)
    lastTick = now
    fpsLbl.Text = "FPS: "..math.floor(fps)
end)
